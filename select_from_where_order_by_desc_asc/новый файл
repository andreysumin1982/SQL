В любом случае, допустим, вам нужна информация о звезде номер 2348. Это довольно легко сделать:
SELECT * FROM stars WHERE starid=2348
--------------------------------------------
Этот запрос возвращает только одну строку, которая оказывается звездой, о которой мы хотели получить информацию.

Есть еще кое-что, что ты можешь сделать с ЭТИМ МЕСТОМ. Допустим, мы хотим знать о звездах с идентификатором звезды, который больше 1000, но меньше 2000, и которые имеют класс 0:
SELECT * FROM stars WHERE starid>1000 AND starid<2000 AND class=0
-----------------------------------------------
Это должно возвращать менее 100 строк. Помимо И, SQL также понимает ИЛИ, поэтому вы можете запросить все звезды с классом 0 или классом 1, например. Если вам нужно все, кроме одного значения, вы можете либо использовать не-равно (<>), либо логическое НЕ (foo<>3 или НЕТ (foo=3)).

Вы также можете запросить строки в отсортированном порядке. Давайте отсортируем приведенные выше результаты по интенсивности:
SELECT * FROM stars WHERE starid>1000 AND starid<2000 AND class=0 ORDER BY intensity
----------------------------------------------------
Если бы нам сначала нужны были самые яркие звезды, мы бы добавили DESC (для убывания) в запрос, например:
SELECT * FROM stars WHERE starid>1 AND starid<10  ORDER BY intensity DESC
--------------------------------------------------------
Существует также ASC (для возрастания), но обычно это значение по умолчанию.

Мы также можем задать ПОРЯДОК ПО нескольким столбцам, который указывает компоненту базы данных упорядочивать строки по значениям во втором столбце, когда значения в первом столбце равны. В качестве надуманного примера предположим, что мы хотим составить список самых ярких звезд и, в случае одинаково ярких звезд, упорядочить их по положению на оси Z:
SELECT * FROM stars WHERE starid>1000 AND starid<2000 AND class=0 ORDER BY intensity DESC, z
------------------------------------------------------
Обратите внимание, что если мы отбросим предложение WHERE сверху (ВЫБЕРИТЕ * ИЗ ПОРЯДКА звездочек ПО интенсивности DESC, z), базе данных придется сортировать все строки в базе данных, что займет значительно больше времени.

 Сделайте запрос, который возвращает starid, x, y и z для всех звезд, где x больше нуля, а идентификатор звезды меньше ста. Отсортируйте результаты по координате y так, чтобы на первом месте стояли наименьшие значения:
SELECT starid, x, y, z FROM stars WHERE x>0 and starid<100 order by y asc
--------------------------------------------------------

